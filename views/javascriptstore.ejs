<HTML>

<head>
    <style>
        .container {
            width: 80%;
            margin: 0 auto;
            overflow: scroll;
            /* needed to hide stuff outside the height/width */
            height: 600px;
        }

        .table {
            border-collapse: collapse;
            width: 100%;
            height: 100%;
        }

        .table,
        th,
        td {
            border: 1px solid lightgrey;
            padding: 10px;
        }

        .table th {
            height: 25px;
            background-color: black;
            color: white;
        }

        .btn {
            background-color: green;
            color: white;
            padding: 8px 20px;
            border: none;
            cursor: pointer;
        }

        .text-center {
            text-align: center;
            vertical-align: center;
        }

        .hiddenfile {
            display: none;
        }
    </style>
</head>

<BODY>
    <div class="container">
        <table class="table" id="scroll-within-div">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Modified At</th>
                    <th>Length in Bytes</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% 
                
                data.members.sort((a,b) => (a.name < b.name)? -1: (a.name > b.name)? 1: 0).forEach(i => { %>

                <tr>
                    <td class="text-center"><%= i.name %></td>
                    <td class="text-center"><%= i['@modified'] %></td>
                    <td class="text-center"><%= i['@content_length'] %></td>
                    <td class="text-center">
                        <div class="hiddenfile">
                            <input name="upload" type="file" class="updateFile" />
                        </div>
                        <button type="button" class="btn get">Get</button>
                        <button type="button" class="btn update">Update</button>
                        <button type="button" class="btn remove">Remove</button>
                    </td>
                </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
    <script type="text/javascript" src="/approval/static/scripts/jquery-3.4.0.slim.min.js"></script>
    <script type="text/javascript" src="/approval/static/scripts/jquery.floatThead.min.js"></script>
    <script>
        $(document).ready(() => {
            const baseUrl = '<%= baseUrl%>';
            // scroll table
            $('#scroll-within-div').floatThead({});

            // display
            $('.btn.get').click(function () {
                var currow = $(this).closest('tr');
                var scriptName = currow.find('td:eq(0)').text();
                var httpRequest = new XMLHttpRequest();
                httpRequest.onreadystatechange = function () {
                    if (httpRequest.readyState === XMLHttpRequest.DONE && httpRequest.status === 200) {
                        var scriptText = httpRequest.responseText;
                        var scriptWindow = window.open(scriptName, '_blank', 'height=900,width=600');
                        var scriptDocument = scriptWindow.document;
                        var scriptHTML = scriptText.replace(/\n/g, '<br/>');
                        scriptDocument.writeln(scriptHTML);
                    }
                    else if (httpRequest.readyState === XMLHttpRequest.DONE && httpRequest.status !== 200) {
                        alert(`Status Code: ${httpRequest.status}\n Status Text: ${httpRequest.statusText}`)
                    }
                };
                httpRequest.open('GET', baseUrl + `/${scriptName}`, true);
                httpRequest.send();
                //window.location.href = 'static/loadme.html';
            });

            $('.updateFile').change(function () {
                var myFile = $(this).prop('files')[0];
                var scriptName = myFile.name;
                var reader = new FileReader();
                reader.onload = function () {
                    var content = encodeURIComponent(this.result);
                    var payload = `content=${content}`;
                    var httpRequest = new XMLHttpRequest();
                    httpRequest.onreadystatechange = function () {
                        if (httpRequest.readyState === XMLHttpRequest.DONE && httpRequest.status === 200) {
                            alert("uploaded");
                        }
                        else if (httpRequest.readyState === XMLHttpRequest.DONE && httpRequest.status !== 200) {
                            alert(`Status Code: ${httpRequest.status}\n Status Text: ${httpRequest.statusText}`)
                        }
                    };
                    httpRequest.open('POST', baseUrl + `/update/${scriptName}`, true);
                    httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                    httpRequest.send(payload);
                }
                reader.readAsText(myFile);
            });

            // update
            $('.btn.update').click(function () {
                var currow = $(this).closest('tr');
                var scriptName = currow.find('td:eq(0)').text();
                $myInput = $(this).closest('td').children('div:eq(0)').children('input:eq(0)')
                $myInput.trigger('click');
            });

            function checkStatus(myWindow, myTitle) {
                if (myWindow.document) {
                    myWindow.document.title = myTitle;
                }
                else {
                    setTimeout(checkStatus, 10);
                }
            }

        });
    </script>
</BODY>

</HTML>